{
  "languageserver": {
    "elmLS": {
      "command": "elm-language-server",
      "filetypes": ["elm"],
      "rootPatterns": ["elm.json"],
      "initializationOptions": {
        "elmAnalyseTrigger": "change"
      }
    }
  },
  "elixir.pathToElixirLS": "~/.elixir-ls/release/language_server.sh",
  "workspace.ignoredFiletypes": ["gitcommit"],
  "coc.preferences.jumpCommand": "edit",
  "coc.preferences.hoverTarget": "float",
  "diagnostic.refreshOnInsertMode": true,
  "suggest.floatEnable": true,
  "suggest.noselect": false,
  "suggest.acceptSuggestionOnCommitCharacter": true,
  "suggest.enablePreview": true,
  "suggest.enablePreselect": true,
  "diagnostic.errorSign": "!!",
  "diagnostic.warningSign": "!!",
  "diagnostic.infoSign": "!!",
  "diagnostic.hintSign": "!!",
  "diagnostic.signOffset": 999999,
  "diagnostic.maxWindowHeight": 10,
  "signature.maxWindowHeight": 10,
  "diagnostic.checkCurrentLine": true,
  "yank.highlight.duration": 270,
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "typescript.suggest.completeFunctionCalls": false,
  "javascript.suggest.completeFunctionCalls": false,
  "coc.preferences.currentFunctionSymbolAutoUpdate": true,
  "coc.preferences.formatOnSaveFiletypes": [
    "elm",
    "css",
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "elixir",
    "eelixir",
    "svelte",
    "ruby",
    "eruby"
  ],
  "css.validate": false,
  "less.validate": false,
  "scss.validate": false,
  "wxss.validate": false,
  "stylelintplus.autoFixOnSave": true,
  "stylelintplus.validateOnType": true,
  "prettier.requireConfig": true,
  "prettier.disableSuccessMessage": true,
  "eslint.autoFixOnSave": true,
  "eslint.filetypes": ["javascript", "javascriptreact", "typescript", "typescriptreact"],
  "solargraph.trace.server": "verbose",
  "solargraph.diagnostics": false,
  "solargraph.autoformat": true,
  "solargraph.formatting": true,
  "tailwindCSS.trace.server": "messages",
  "tailwindCSS.headwind.runOnSave": false,
  "html.format.enable": true,
  "tsserver.formatOnType": true,
  "coc.preferences.formatOnType": true
}
