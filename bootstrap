#!/bin/zsh
# name: bootstrap
# author: Wil Hall
# email: wil@wilhall.com

if [ "$#" -ne 1 ] && [ ! -f "$HOME/.auth" ]; then
  echo "Usage: ./bootstrap <DOTFILES_GITHUB_PERSONAL_ACCESS_TOKEN>"
  exit 1
fi

DOTFILES_GITHUB_PERSONAL_ACCESS_TOKEN=$1
SETUP_HOMEBREW=false

create_auth_dotfile() {
  if [ ! -f "$HOME/.auth" ]; then
    SETUP_HOMEBREW=true
  cat > "$HOME/.auth" <<- OUT
export HOMEBREW_GITHUB_API_TOKEN=$DOTFILES_GITHUB_PERSONAL_ACCESS_TOKEN
OUT
  fi
}

install_xcode_cli() {
  xcode-select -p 1>/dev/null
  if [[ $? != 0 ]]; then
    xcode-select --install
  fi
}

install_homebrew() {
  which -s brew
  if [[ $? != 0 ]]; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  fi
}

install_homebrew_bundle() { 
  if [[ $SETUP_HOMEBREW == true ]]; then
    /opt/homebrew/bin/brew tap homebrew/bundle
    /opt/homebrew/bin/brew bundle
  fi
}

symlink_dotfiles() {
  ln -sfn $HOME/.dotfiles/.* $HOME/
  mkdir -p $HOME/.config && ln -sfn $HOME/.dotfiles/_config/* $HOME/.config
}

copy_etc_paths() {
  sudo cp $HOME/.dotfiles/_etc_paths/* /etc/paths.d
}

copy_ssh_settings() {
  mkdir -p $HOME/.ssh && rsync -u $HOME/.dotfiles/_ssh/* $HOME/.ssh
}

make_workspace() {
  mkdir -p $HOME/workspace/utils
}

make_user_bin() {
  mkdir -p $HOME/bin
  rsync -u $HOME/.dotfiles/bin/* $HOME/bin
}

restore_user_defaults() {
  $HOME/.dotfiles/dx --restore-all
}

setup_vim() {
 vim -c 'PlugUpdate' -c 'CocUpdate' -c 'q!' -c 'q!'
}

set_default_shell() {
  sudo dscl . -create /Users/$USER UserShell /opt/homebrew/bin/zsh
}

install_fonts() {
  find . -name "*.[ot]tf" -type f -exec cp {} "$HOME/Library/Fonts" \; 
}

configure_sublime_merge() {
  if [ ! -L "/usr/local/bin/smerge" ]; then
    sudo ln -s "/Applications/Sublime Merge.app/Contents/SharedSupport/bin/smerge" /usr/local/bin/smerge
  fi
}

install_rosetta() {
  sudo softwareupdate --install-rosetta
}

configure_asdf() {
  asdf plugin-add yarn
  asdf plugin-add python
  asdf plugin add nodejs 
  asdf plugin add ruby 
  # For nodejs, this may need to be run manually from the Rosetta terminal 
  cd $HOME && RUBY_CFLAGS="-w" arch -x86_64 asdf install
}

install_athame() {
  if [ ! -f "$HOME/bin/azsh" ]; then
    git clone --recursive http://github.com/ardagnir/athame $HOME/workspace/utils/athame && cd $HOME/workspace/utils/athame && mkdir -p $HOME/.athame && ./zsh_athame_setup.sh --prefix=$HOME/.athame/ --vimbin=$(which nvim) && mv /usr/local/bin/zsh /usr/local/bin/_zsh && ln -s $HOME/.athame/bin/zsh /usr/local/bin/zsh && ln -s $HOME/.athame/bin/zsh $HOME/bin/azsh
  fi
}

install_tpm() {
  if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
    git clone https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
  fi
}

bootstrap() {
  make_workspace
  copy_etc_paths
  copy_ssh_settings
  install_fonts
  create_auth_dotfile
  symlink_dotfiles
  install_xcode_cli
  install_rosetta
  install_homebrew
  install_homebrew_bundle
  make_user_bin
  set_default_shell
  restore_user_defaults
  setup_vim
  configure_sublime_merge
  configure_asdf
  #install_athame
  install_tpm
}

bootstrap
